{"version":3,"sources":["webpack:///./lms/static/js/accessible_components/StatusBarAlert.jsx"],"names":["StatusAlertRenderer","message","selector","afterselector","shiftFocus","bind","element","document","querySelector","ReactDOM","render","afterelement","focus"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;;;;AAIA;AACA;AACA;;AAEA,IAAaA,mBAAb;AACE,+BAAYC,OAAZ,EAAqBC,QAArB,EAA+BC,aAA/B,EAA8C;AAAA;;AAAA;;AAC5C,SAAKC,UAAL,GAAkB,KAAKA,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,CAAlB;AACA,QAAMC,UAAUC,SAASC,aAAT,CAAuBN,QAAvB,CAAhB;;AAEA,QAAII,OAAJ,EAAa;AACX;;;;;AAKAG,MAAA,iDAAAA,CAASC,MAAT,CACE,4DAAC,gEAAD;AACE,mBAAU,SADZ;AAEE,qBAAa,IAFf;AAGE,cAAM,IAHR;AAIE,gBAAQT,OAJV;AAKE,qBAAa,IALf;AAME,iBAAS;AAAA,iBAAM,MAAKG,UAAL,CAAgBD,aAAhB,CAAN;AAAA;AANX,QADF,EASEI,SAASC,aAAT,CAAuBN,QAAvB,CATF;AAWD;AACF;;AAvBH;AAAA;AAAA,+BAyBaC,aAzBb,EAyB4B;AACxB,UAAMQ,eAAeJ,SAASC,aAAT,CAAuBL,aAAvB,CAArB;AACA;;;AAGA,UAAIQ,YAAJ,EAAkB;AAChBA,qBAAaC,KAAb;AACD;AACF;AAjCH;;AAAA;AAAA,I","file":"AlertStatusBar.js","sourcesContent":["/*\nWrapper for React/Paragon accessible status bar\n*/\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { StatusAlert } from '@edx/paragon/static';\n\nexport class StatusAlertRenderer {\n  constructor(message, selector, afterselector) {\n    this.shiftFocus = this.shiftFocus.bind(this);\n    const element = document.querySelector(selector);\n\n    if (element) {\n      /*\n      These props match the defaults mostly in the paragon lib:\n      https://github.com/edx/paragon/tree/master/src/StatusAlert\n      but are made explicit in the case of a upstream change to defaults\n      */\n      ReactDOM.render(\n        <StatusAlert\n          alertType='warning'\n          dismissible={true}\n          open={true}\n          dialog={message}\n          dismissable={true}\n          onClose={() => this.shiftFocus(afterselector)}\n        />,\n        document.querySelector(selector)\n      );\n    }\n  }\n\n  shiftFocus(afterselector) {\n    const afterelement = document.querySelector(afterselector);\n    /*\n    Optional generic function to shift 'next' focusable element for keyboard users\n    */\n    if (afterelement) {\n      afterelement.focus();\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lms/static/js/accessible_components/StatusBarAlert.jsx"],"sourceRoot":""}