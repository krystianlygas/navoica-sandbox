{"version":3,"sources":["webpack:///./lms/static/js/student_account/components/PasswordResetConfirmation.jsx","webpack:///./lms/static/js/student_account/components/PasswordResetInput.jsx"],"names":["PasswordResetConfirmation","props","state","password","passwordConfirmation","showMatchError","isValid","validationMessage","onBlurPassword1","bind","onBlurPassword2","updatePasswordState","validatePassword","setState","fetch","method","headers","body","JSON","stringify","then","res","json","response","validation_decisions","errorMessage","gettext","csrfToken","React","Component","propTypes","PropTypes","string","isRequired","defaultProps","PasswordResetInput","name"],"mappings":"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","file":"PasswordResetConfirmation.js","sourcesContent":["/* globals gettext */\n\nimport 'whatwg-fetch';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport { Button, StatusAlert } from '@edx/paragon/static';\n\nimport PasswordResetInput from './PasswordResetInput';\n\n// NOTE: Use static paragon with this because some internal classes (StatusAlert at least)\n// conflict with some standard LMS ones ('alert' at least). This means that you need to do\n// something like the following on any templates that use this class:\n//\n// <link type='text/css' rel='stylesheet' href='${STATIC_URL}paragon/static/paragon.min.css'>\n//\n\nclass PasswordResetConfirmation extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      password: '',\n      passwordConfirmation: '',\n      showMatchError: false,\n      isValid: true,\n      validationMessage: '',\n    };\n    this.onBlurPassword1 = this.onBlurPassword1.bind(this);\n    this.onBlurPassword2 = this.onBlurPassword2.bind(this);\n  }\n\n  onBlurPassword1(password) {\n    this.updatePasswordState(password, this.state.passwordConfirmation);\n    this.validatePassword(password);\n  }\n\n  onBlurPassword2(passwordConfirmation) {\n    this.updatePasswordState(this.state.password, passwordConfirmation);\n  }\n\n  updatePasswordState(password, passwordConfirmation) {\n    this.setState({\n      password,\n      passwordConfirmation,\n      showMatchError: !!password && !!passwordConfirmation && (password !== passwordConfirmation),\n    });\n  }\n\n  validatePassword(password) {\n    fetch('/api/user/v1/validation/registration', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        password,\n      }),\n    })\n    .then(res => res.json())\n    .then((response) => {\n      let validationMessage = '';\n      // Be careful about grabbing this message, since we could have received an HTTP error or the\n      // endpoint didn't give us what we expect. We only care if we get a clear error message.\n      if (response.validation_decisions && response.validation_decisions.password) {\n        validationMessage = response.validation_decisions.password;\n      }\n      this.setState({\n        isValid: !validationMessage,\n        validationMessage,\n      });\n    });\n  }\n\n  render() {\n    return (\n      <section id=\"password-reset-confirm-anchor\" className=\"form-type\">\n        <div id=\"password-reset-confirm-form\" className=\"form-wrapper\" aria-live=\"polite\">\n          <StatusAlert\n            alertType=\"danger\"\n            dismissible={false}\n            open={!!this.props.errorMessage}\n            dialog={this.props.errorMessage}\n          />\n\n          <form id=\"passwordreset-form\" method=\"post\" action=\"\">\n            <h2 className=\"section-title lines\">\n              <span className=\"text\">\n                {gettext('Reset Your Password')}\n              </span>\n            </h2>\n\n            <p className=\"action-label\" id=\"new_password_help_text\">\n              {gettext('Enter and confirm your new password.')}\n            </p>\n\n            <PasswordResetInput\n              name=\"new_password1\"\n              describedBy=\"new_password_help_text\"\n              label={gettext('New Password')}\n              onBlur={this.onBlurPassword1}\n              isValid={this.state.isValid}\n              validationMessage={this.state.validationMessage}\n            />\n\n            <PasswordResetInput\n              name=\"new_password2\"\n              describedBy=\"new_password_help_text\"\n              label={gettext('Confirm Password')}\n              onBlur={this.onBlurPassword2}\n              isValid={!this.state.showMatchError}\n              validationMessage={gettext('Passwords do not match.')}\n            />\n\n            <input\n              type=\"hidden\"\n              id=\"csrf_token\"\n              name=\"csrfmiddlewaretoken\"\n              value={this.props.csrfToken}\n            />\n\n            <Button\n              type=\"submit\"\n              className={['btn', 'btn-primary', 'action-update', 'js-reset']}\n              label={gettext('Reset My Password')}\n            />\n          </form>\n        </div>\n      </section>\n    );\n  }\n}\n\nPasswordResetConfirmation.propTypes = {\n  csrfToken: PropTypes.string.isRequired,\n  errorMessage: PropTypes.string,\n};\n\nPasswordResetConfirmation.defaultProps = {\n  errorMessage: '',\n};\n\nexport { PasswordResetConfirmation }; // eslint-disable-line import/prefer-default-export\n\n\n\n// WEBPACK FOOTER //\n// ./lms/static/js/student_account/components/PasswordResetConfirmation.jsx","/* globals gettext */\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport { InputText } from '@edx/paragon/static';\n\nfunction PasswordResetInput(props) {\n  return (\n    <div className=\"form-field\">\n      <InputText\n        id={props.name}\n        type=\"password\"\n        themes={['danger']}\n        dangerIconDescription={gettext('Error: ')}\n        required\n        {...props}\n      />\n    </div>\n  );\n}\n\nPasswordResetInput.propTypes = {\n  name: PropTypes.string.isRequired,\n};\n\nexport default PasswordResetInput;\n\n\n\n// WEBPACK FOOTER //\n// ./lms/static/js/student_account/components/PasswordResetInput.jsx"],"sourceRoot":""}